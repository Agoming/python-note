# 四大内置数据结构
      # list 列表
      # set  集合
      # dict 字典
      # tuple 元祖

# 本章大纲
      # 元素-tuple
             # 元祖的常用操作
             # 元祖的内置函数
             # 元祖的常用函数
             # 元祖变量交换法

# 元祖的特性
      # 是一个有序列表，元祖可以看成是一个不可更改的list
      # 元祖数据值可以访问，但不能修改，意味着关于list里面修改的函数tuple都不可使用
      # 元祖数据可以是任何类型
      # list具有的特性出了可修改以外，元祖全具有，比如切边，双层遍历，相乘，序列相加等等


# 元祖常用操作
# 创建空元祖
t = (1,2,3,4,5)
print(t)

# 测试元祖是否可以遍历超出下标范围
t = (1,2,3,4,5)
# print(t[11])# 报错，证明不可超出

# 对比切片操作过后是否还是同一个元祖
t = (1,2,3,4,5)
t1 = t[1::2] # 从下标1到下标最大值-1，每次遍历隔开一个
print(id(t))
print(id(t1))
print(t)
print(t1)
# 切边操作过后，两个元祖并不是同一个

# 序列相加
t1 = (1,2,3,4)
t2 = (5,6,7,8)
print(t1+t2)
# 上面提到元祖不可修改，所谓的不可修改指的是内容不可修改，而序列相加和序列相乘是传址行为，所以并没有报错
# 下面示范通过传值操作修改元祖的内容
# t1[3] = 100
# print(t1)# 报错则证明元祖的确无法进行传值修改

# 序列相乘
t = (1,2,3,4)
print(t * 3)# 将t元祖的内容复制三次并同一作为一个元祖打印

# 成员检测 in  和 not in
t = (1,2,3)
if 2 in t:
    print("存在")
else:
    print("不存在")

# not in
if 2 not in t:
    print("true")
else:
    print("false")

# 元祖遍历操作，一般使用for
# 1.单层元祖遍历
t = (1,2,3,4,5)
for i in t:
    print(i,end=" ")# 关于end参数的用法请寻找前几篇随笔

print()#分行

# 2.双层元祖遍历
# 直接访问子元祖
t = ((1,2,3),("a","b","c"),(1,2,3))
for i in t:
    print(i)

# 访问每个子元祖里的内容
t = ((1,2,3),("a","b","c"),(1,2,3))
for i,k,v in t:
    print(i,"--",k,"--",v)

# 元祖的内置函数

# len:获取元祖的长度
t = (1,2,3,4,5)
print(len(t))

# max,min:获得元祖最大值和最小值
t = (1,1,3,4,5,5)
# 假如元祖内有多个相同的最大值或最小值，只会打印一个
print(min(t))
print(max(t))

# tuple:转化或创建元祖
# 创建元祖
t = tuple()
print(type(t))
print(t)# 使用tuple创建元祖只能创建空的元祖，无法创建带值的元祖

# 转化元祖
l = [1,2,3,4]# 创建一个list
print(type(l))
print(l)
# 将list转化为tuple
l = tuple(l)
print(type(l))
print(l)

# 元祖的常用函数
     # 出了修改传值内容的函数以外，基本跟list通用
     # 想要查看list详细函数用法，请点击:

# count:计算指定值或元素出现的次数
t = (1,2,2,2,2,3,4,5,6,1,2)
print(t.count(2))

# index:求指定元素值元祖中的索引位置
t = (1,2,2,3,4,5,6)
print(t.index(1))
print(t.index(2))# 当指定索引的值有多个时，则会索引到最近的一个
# 还有其他常用函数，在list章节已经全部详细讲解，除了关于修改类型的函数(clear,append等等),其他与list无疑，请注意使用函数时是传值还是传址


# 元祖遍历交换法
# 两个变量交换值
a = 1
b = 3
print(a)
print(b)
print("*" * 20)
# c 或java写法
c = a
a = b
b = c
print(a)
print(b)
print("*" * 20)
# python的写法
a,b = b,a
print(a)
print(b)